---
- hosts: "masters, workers"
#- hosts: 'masters'
  remote_user: vagrant
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: yes
  connection: ssh

# essa playbook foi escrita com base no artigo "https://devopscube.com/setup-kubernetes-cluster-kubeadm/"

  tasks:
    - name: Habilitando trafego iptables bridged - criando arquivo
      file:
        path: "/etc/modules-load.d/k8s.conf"
        state: "touch"
    
    - name: Habilitando trafego iptables bridged - escrevendo no arquivo
      blockinfile:
        path: "/etc/modules-load.d/k8s.conf"
        block: |
              br_netfilter
    
    - name: Modificando para subir arquivo no sysctl - criando arquivo
      file:
        path: "/etc/sysctl.d/k8s.conf"
        state: "touch"
    
    - name: Modificando para subir arquivo no sysctl - escrevendo no arquivo
      blockinfile:
        path: "/etc/sysctl.d/k8s.conf"
        block: |
              net.bridge.bridge-nf-call-ip6tables = 1
              net.bridge.bridge-nf-call-iptables = 1
    
    - name: aplicando sysctl system
      shell: |
              sudo sysctl --system
    
    - name: desabilitando o swap
      shell: |
              sudo swapoff -a
              sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
    
    - name: instalando pacotes requeridos para o docker
      shell: |
              sudo apt-get update -y
              sudo apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release

    - name: adicionando chave gpg do docker e o repositorio
      shell: |
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
              echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
              
    - name: instalando docker community edition
      shell: |
              sudo apt-get update -y
              sudo apt-get install docker-ce docker-ce-cli containerd.io -y
      
    - name: configuracao do docker para systemd cgroup driver - criando arquivo
      file:
        path: "/etc/docker/daemon.json"
        state: "touch"
    
    - name: configuracao do docker para systemd cgroup driver - escrevendo no arquivo
      blockinfile:
        path: "/etc/docker/daemon.json"
        insertafter: '-XX:originaltext'
        marker: ""
        backup: yes
        block: |
              {
                "exec-opts": ["native.cgroupdriver=systemd"],
                "log-driver": "json-file",
                "log-opts": {
                  "max-size": "100m"
                },
                "storage-driver": "overlay2"
              }
    
    - name: iniciando e habilitando o docker
      shell: |
              sudo systemctl enable docker
              sudo systemctl daemon-reload
              sudo systemctl restart docker

    - name: instalando pre requisitos para kubelet kubectl e kubeadmin
      shell: |
              sudo apt-get update
              sudo apt-get install -y apt-transport-https ca-certificates curl
              sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
              echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
              sudo apt-get update -y
              sudo apt-get install -y kubelet=1.21.14-00 kubeadm=1.21.14-00 kubectl=1.21.14-00
              sudo apt-mark hold kubelet kubeadm kubectl